{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\practicanteinfra\\\\WebstormProjects\\\\activos-infra-front\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport API_BASE_URL from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const token = Cookies.get('token');\n      if (token) {\n        // Si hay un token en las cookies, considera al usuario como autenticado\n        setIsLoggedIn(true);\n        console.log('entro al if token');\n        try {\n          // Realiza una solicitud al nuevo endpoint para obtener el token decodificado\n          const response = await fetch(`${API_BASE_URL}/users/get-token`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              token\n            })\n          });\n          console.log('entro al try');\n          if (response.ok) {\n            const decodedToken = await response.json();\n            setIsAdmin(decodedToken.decoded.user.tipoUsuario == 'Administrador' ? true : false);\n            setUser(decodedToken.decoded.user);\n            console.log('token', decodedToken);\n            console.log('entro al if response', isAdmin);\n            console.log(user);\n          } else {\n            console.error('Error decoding token:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Error:', error);\n        }\n      }\n    };\n    fetchData(); // Llama a la funci贸n asincr贸nica inmediatamente\n  }, []);\n  const login = (token, isAdmin, userData) => {\n    setIsLoggedIn(true);\n    setIsAdmin(isAdmin);\n    setUser(userData);\n    const expirationTimeInHours = 2;\n\n    // Calcula la fecha de vencimiento en horas desde ahora\n    const expirationDate = new Date(new Date().getTime() + expirationTimeInHours * 60 * 60 * 1000);\n\n    // Almacena el token en localStorage o en cookies\n    // localStorage.setItem('token', token);\n    Cookies.set('token', token, {\n      expires: expirationDate\n    });\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    setIsAdmin(false);\n    setUser(null);\n\n    // Elimina el token de localStorage o de cookies\n    // localStorage.removeItem('token');\n    Cookies.remove('token');\n  };\n  const authContextValue = {\n    isLoggedIn,\n    isAdmin,\n    user,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"bt78NCP+DiwRDdtdSCPxMPZLTNY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","Cookies","API_BASE_URL","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","user","setUser","fetchData","token","get","console","log","response","fetch","method","headers","body","JSON","stringify","ok","decodedToken","json","decoded","tipoUsuario","error","statusText","login","userData","expirationTimeInHours","expirationDate","Date","getTime","set","expires","logout","remove","authContextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/practicanteinfra/WebstormProjects/activos-infra-front/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport API_BASE_URL from '../config';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n          const token = Cookies.get('token');\r\n      \r\n          if (token) {\r\n            // Si hay un token en las cookies, considera al usuario como autenticado\r\n            setIsLoggedIn(true);\r\n            console.log('entro al if token');\r\n            try {\r\n              // Realiza una solicitud al nuevo endpoint para obtener el token decodificado\r\n              const response = await fetch(`${API_BASE_URL}/users/get-token`, {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ token }),\r\n              });\r\n            console.log('entro al try');\r\n\r\n      \r\n              if (response.ok) {\r\n                const decodedToken = await response.json();\r\n                setIsAdmin(decodedToken.decoded.user.tipoUsuario == 'Administrador' ? true: false);\r\n                setUser(decodedToken.decoded.user);\r\n            console.log('token', decodedToken);\r\n\r\n            console.log('entro al if response', isAdmin);\r\n            console.log(user);\r\n        } else {\r\n                console.error('Error decoding token:', response.statusText);\r\n              }\r\n            } catch (error) {\r\n              console.error('Error:', error);\r\n            }\r\n          }\r\n        };\r\n      \r\n        fetchData(); // Llama a la funci贸n asincr贸nica inmediatamente\r\n      \r\n      }, []);\r\n\r\n    const login = (token, isAdmin, userData) => {\r\n        setIsLoggedIn(true);\r\n        setIsAdmin(isAdmin);\r\n        setUser(userData);\r\n\r\n        const expirationTimeInHours = 2;\r\n\r\n        // Calcula la fecha de vencimiento en horas desde ahora\r\n        const expirationDate = new Date(new Date().getTime() + expirationTimeInHours * 60 * 60 * 1000);\r\n\r\n        // Almacena el token en localStorage o en cookies\r\n        // localStorage.setItem('token', token);\r\n        Cookies.set('token', token, { expires: expirationDate });\r\n    };\r\n\r\n    const logout = () => {\r\n        setIsLoggedIn(false);\r\n        setIsAdmin(false);\r\n        setUser(null);\r\n\r\n        // Elimina el token de localStorage o de cookies\r\n        // localStorage.removeItem('token');\r\n        Cookies.remove('token');\r\n    };\r\n\r\n    const authContextValue = {\r\n        isLoggedIn,\r\n        isAdmin,\r\n        user,\r\n        login,\r\n        logout,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={authContextValue}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}